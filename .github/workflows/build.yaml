name: On-Demand Build

on:
  workflow_dispatch

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          token: ${{ secrets.CHECKOUT_TOKEN }}
      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: ''
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install g++ pkg-config libx11-dev libasound2-dev libudev-dev libxkbcommon-x11-0 libwayland-dev libxkbcommon-dev
      - name: Compile Release build with `dev` feature
        run: |
          cargo clean --locked --package mimalloc-redirect
          cargo build --locked --release --no-default-features --features="dev"
      - name: Copy files to a common directory (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir out
          mv assets out
          mv target/release/centripetal out
      - name: Copy files to a common directory (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path 'out'
          Move-Item -Path 'assets' -Destination 'out' -Force
          Move-Item -Path 'target/release/centripetal.exe' -Destination 'out' -Force
          Move-Item -Path 'target/release/build/mimalloc-redirect-*/out/bin/mimalloc.dll' -Destination 'out' -Force
          Move-Item -Path 'target/release/build/mimalloc-redirect-*/out/bin/mimalloc-redirect.dll' -Destination 'out' -Force
      - name: Upload game as a GitHub Action artifact
        uses: actions/upload-artifact@v4
        with:
          name: Centripetal ${{ runner.os }}
          path: 'out/**'
          if-no-files-found: error
          compression-level: 9
          retention-days: 30
